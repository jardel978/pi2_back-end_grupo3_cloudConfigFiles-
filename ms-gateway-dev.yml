eureka:
  instance:
    hostname: ms-discovery
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:8761/eureka

spring:
  cloud:
    gateway:
      default-filters:
        - TokenRelay
      routes:
        - id: ms-users
          uri: lb://MS-USERS
          predicates:
            - Path=/users/**
        - id: ms-accounts
          uri: lb://MS-ACCOUNTS
          predicates:
            - Path=/accounts/**, /cards/**
#          filters:
#            - StripPrefix=2
  security:
    oauth2:
      client:
        provider:
          keycloak-provider:
            issuer-uri: http://keycloak:8080/auth/realms/DmhRealm
        registration:
          keycloak-spring-gateway-client:
            provider: keycloak-provider
            scope: openid
            client-id: ms-gateway-client
            client-secret: ${KCK_GATEWAY_CLIENT_SECRET:2EsaCfgAhbQQrB45LyGHmyw9R3U1M7Uu}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
      resource-server:
        jwt:
          issuer-uri: http://keycloak:8080/realms/DmhRealm
          jwk-set-uri: http://keycloak:8080/realms/DmhRealm/protocol/openid-connect/certs

management:
  info:
    env:
      enabled: true
  endpoints:
    web:
      exposure:
        include: health,info

info:
  name: Servico de roteamento (API Gateway) para os demais servicos presentes no ecossistema da aplicacao.
  author: Grupo 03
  severity: Alto

logging:
  level:
    org.springframework.security: DEBUG
  pattern:
    dateformat: 'dd-MM-yyyy HH:mm:ss.SSS'
    console: '%clr(%d{"dd-MM-yyyy''T''HH:mm:ss"}){faint} %highlight(%clr(${LOG_LEVEL_PATTERN:-%5p})) %clr(${PID:- })
    %clr(---){faint} %clr([%15.15t]){faint} %clr([%-40.40logger{39}]:%line){cyan} %clr(-){faint} %m%n%wEx'
